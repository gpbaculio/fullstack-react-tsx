{"version":3,"sources":["store/user/types.tsx","store/user/reducers.tsx","store/todos/reducers.tsx","store/index.tsx","store/todos/types.tsx","utils/setAuthorizationHeader.tsx","utils/timeDifference.tsx","store/user/actions.tsx","components/pages/LogIn.tsx","components/pages/ConfirmToken.tsx","components/pages/SignUp.tsx","store/todos/actions.tsx","components/pages/Home/Todos/TodoInput.tsx","components/pages/Home/Todos/Todo.tsx","components/pages/Home/Todos/Todos.tsx","components/pages/Home/AddTodo.tsx","components/pages/Home/Search.tsx","components/pages/Home/Filter.tsx","components/pages/Home/Paginator.tsx","components/pages/Home/Home.tsx","components/routes/GuestRoute.tsx","components/routes/AuthenticatedRoute.tsx","components/navigation/Header.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["FETCH_USER_SUCCESS","FETCH_USER_REQUEST","FETCH_USER_FAILURE","LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_FAILURE","SIGNUP_REQUEST","SIGNUP_SUCCESS","SIGNUP_FAILURE","LOGOUT","CONFIRM_TOKEN_REQUEST","CONFIRM_TOKEN_SUCCESS","CONFIRM_TOKEN_FAILURE","CLEAR_ERROR","initialErrorsState","logIn","signUp","fetchUser","confirmToken","initialUserState","_id","email","token","confirmed","loading","app","errors","user","state","arguments","length","undefined","action","type","Object","objectSpread","payload","error","initialTodoLoadingState","toggleComplete","updateText","deleteTodo","initialTodoErrorsState","initialState","ids","entities","addTodo","fetchTodos","clearCompleted","toggleAll","filter","page","searchText","count","countPerPage","activePage","showRefresh","rootReducer","combineReducers","todos","todo","concat","toConsumableArray","defineProperty","statesuc","console","log","todoId","complete","text","_state$entities","objectWithoutProperties","map","_toPropertyKey","id","todoIds","newEntities","forEach","newIds","indexOf","newCount","mockEntities","toggleAllCount","keys","setAuthorizationHeader","axios","defaults","headers","common","authorization","utils_timeDifference","date","current","previous","elapsed","milliSecondsPerMinute","Math","round","milliSecondsPerHour","milliSecondsPerDay","timeDifference","Date","getTime","clearError","Login","data","password","server","onChange","e","_this","_e$target","target","name","value","setState","onSubmit","_callee","regenerator_default","a","wrap","_context","prev","next","preventDefault","validate","props","history","push","stop","isEmail","_prevProps","_ref2","this","prevState","_this$state","react_default","createElement","Container","style","height","Row","className","Col","xs","sm","lg","Card","CardHeader","CardBody","Form","Alert","color","FormGroup","Label","for","Input","placeholder","FormFeedback","Button","disabled","FormText","react_router_dom","to","React","Component","connect","_ref3","_ref","callback","asyncToGenerator","mark","dispatch","_getState","post","sent","localStorage","setItem","t0","response","_x","_x2","apply","withRouter","override","css","_templateObject","ConfirmToken","componentDidMount","_this$props","match","params","componentWillUnmount","_this$props2","react_spinners","sizeUnit","size","_ref7","_callee3","_ref8","_context3","_x5","_x6","SignUp","_ref4","_ref5","_callee2","_ref6","_context2","_x3","_x4","schema","Entity","_ref10","_ref11","_callee4","_normalize","_context4","offset","limit","get","normalize","t","result","_x7","_x8","setPage","TodoInput","todoText","handleIsEditing","trim","onBlur","mapDispatchToProps","getState","_getState2","_ref9","_todo3","userId","Todo_templateObject","TodoComponent","isEditing","modal","handleToggleComplete","toggleModal","onDelete","_this$props3","createdAt","updatedAt","md","Modal","isOpen","toggle","ModalHeader","ModalBody","ModalFooter","onClick","CardTitle","checked","Todos_TodoInput","onDoubleClick","textDecoration","cursor","fa","CardText","borderTop","_todo2","_ref12","_ref13","_callee5","_ref14","_context5","_x9","_x10","Todos_templateObject","Todos","Todo","assign","key","AddTodo_templateObject","AddTodo","_todo","Search","setSearchText","onClearText","clearSearchText","fontSize","Filter_templateObject","Filter","completeAll","clearCompletedModal","componentDidUpdate","prevProps","handleToggleAll","handleClearCompleted","handleFilterClick","setFilter","query","currentTarget","url","every","_this$props4","displayClearCompleted","ButtonGroup","_ref15","_callee6","_getState3","_getState3$todos","completedTodoIds","_ref16","_context6","_x11","_x12","_ref17","_callee7","_getState4","_getState4$todos","_ref18","_normalize2","_entities","_context7","_x13","_x14","Paginator","onPageChange","onRefresh","Fragment","Pagination_default","itemsCountPerPage","totalItemsCount","pageRangeDisplayed","Home","Home_AddTodo","Home_Search","Home_Filter","Home_Todos_Todos","Home_Paginator","isAuthenticated","component","rest","react_router","render","Header","logOut","removeItem","Navbar","light","expand","NavbarToggler","Collapse","navbar","Nav","NavItem","NavLink","backgroundColor","border","App_templateObject","App","getItem","window","location","href","includes","left","top","right","bottom","navigation_Header","exact","path","routes_GuestRoute","LogIn","AuthenticatedRoute","Boolean","hostname","store","middlewares","thunkMiddleware","middleWareEnhancer","applyMiddleware","createStore","composeWithDevTools","configureStore","ReactDOM","es","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e99d3604.chunk.js","sourcesContent":["export const FETCH_USER_SUCCESS = 'FETCH_USER_SUCCESS';\nexport const FETCH_USER_REQUEST = 'FETCH_USER_REQUEST';\nexport const FETCH_USER_FAILURE = 'FETCH_CURRENT_USER_FAILURE';\nexport const LOGIN_REQUEST = 'LOGIN_REQUEST';\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nexport const LOGIN_FAILURE = 'LOGIN_FAILURE';\nexport const SIGNUP_REQUEST = 'SIGNUP_REQUEST';\nexport const SIGNUP_SUCCESS = 'SIGNUP_SUCCESS';\nexport const SIGNUP_FAILURE = 'SIGNUP_FAILURE';\nexport const LOGOUT = 'LOGOUT';\nexport const CONFIRM_TOKEN_REQUEST = 'CONFIRM_TOKEN_REQUEST';\nexport const CONFIRM_TOKEN_SUCCESS = 'CONFIRM_TOKEN_SUCCESS';\nexport const CONFIRM_TOKEN_FAILURE = 'CONFIRM_TOKEN_FAILURE';\nexport const CLEAR_ERROR = 'CLEAR_ERROR';\n\nexport interface UserErrorsState {\n  logIn: string;\n  signUp: string;\n  fetchUser: string;\n  confirmToken: string;\n}\nexport interface UserLoadingState {\n  logIn: boolean;\n  signUp: boolean;\n  fetchUser: boolean;\n  confirmToken: boolean;\n  app: boolean;\n}\n\nexport interface UserState {\n  _id: string;\n  email: string;\n  token: string;\n  confirmed: boolean;\n  loading: UserLoadingState;\n  errors: UserErrorsState;\n}\n\nexport interface User {\n  user: string;\n  message: string;\n  timestamp: number;\n}\n\ninterface fetchUserRequest {\n  type: typeof FETCH_USER_REQUEST;\n}\ninterface fetchUserSuccess {\n  type: typeof FETCH_USER_SUCCESS;\n  payload: {\n    user: User;\n  };\n}\ninterface fetchUserFailure {\n  type: typeof FETCH_USER_FAILURE;\n  payload: {\n    error: string;\n  };\n}\ninterface logInRequest {\n  type: typeof LOGIN_REQUEST;\n}\ninterface logInSuccess {\n  type: typeof LOGIN_SUCCESS;\n  payload: {\n    user: User;\n  };\n}\ninterface logInFailure {\n  type: typeof LOGIN_FAILURE;\n  payload: {\n    error: string;\n  };\n}\ninterface signUpRequest {\n  type: typeof SIGNUP_REQUEST;\n}\ninterface signUpSuccess {\n  type: typeof SIGNUP_SUCCESS;\n  payload: {\n    user: User;\n  };\n}\ninterface signUpFailure {\n  type: typeof SIGNUP_FAILURE;\n  payload: {\n    error: string;\n  };\n}\ninterface confirmTokenRequest {\n  type: typeof CONFIRM_TOKEN_REQUEST;\n}\ninterface confirmTokenSuccess {\n  type: typeof CONFIRM_TOKEN_SUCCESS;\n  payload: {\n    email: string;\n  };\n}\ninterface confirmTokenFailure {\n  type: typeof CONFIRM_TOKEN_FAILURE;\n  payload: {\n    error: string;\n  };\n}\ninterface logout {\n  type: typeof LOGOUT;\n}\ninterface clearError {\n  type: typeof CLEAR_ERROR;\n}\n\nexport type UserActionTypes =\n  | fetchUserRequest\n  | fetchUserSuccess\n  | fetchUserFailure\n  | signUpRequest\n  | signUpSuccess\n  | signUpFailure\n  | logInRequest\n  | logInSuccess\n  | logInFailure\n  | confirmTokenRequest\n  | confirmTokenSuccess\n  | confirmTokenFailure\n  | logout\n  | clearError;\n","import {\n  UserState,\n  UserActionTypes,\n  FETCH_USER_REQUEST,\n  FETCH_USER_SUCCESS,\n  FETCH_USER_FAILURE,\n  SIGNUP_REQUEST,\n  SIGNUP_SUCCESS,\n  SIGNUP_FAILURE,\n  LOGIN_REQUEST,\n  LOGIN_SUCCESS,\n  LOGIN_FAILURE,\n  CONFIRM_TOKEN_REQUEST,\n  CONFIRM_TOKEN_SUCCESS,\n  CONFIRM_TOKEN_FAILURE,\n  LOGOUT,\n  CLEAR_ERROR,\n  UserErrorsState,\n  UserLoadingState\n} from './types';\n\nconst initialErrorsState: UserErrorsState = {\n  logIn: '',\n  signUp: '',\n  fetchUser: '',\n  confirmToken: ''\n};\n\nconst initialLoadingState: UserLoadingState = {\n  logIn: false,\n  signUp: false,\n  fetchUser: false,\n  confirmToken: false,\n  app: false\n};\n\nexport const initialUserState: UserState = {\n  _id: '',\n  email: '',\n  token: '',\n  confirmed: false,\n  loading: initialLoadingState,\n  errors: initialErrorsState\n};\n\nfunction user(state = initialUserState, action: UserActionTypes) {\n  switch (action.type) {\n    case FETCH_USER_REQUEST:\n      return {\n        ...state,\n        loading: {\n          ...state.loading,\n          fetchUser: true\n        }\n      };\n    case FETCH_USER_SUCCESS:\n      return {\n        ...state,\n        ...action.payload.user,\n        loading: {\n          ...state.loading,\n          fetchUser: false\n        }\n      };\n    case FETCH_USER_FAILURE:\n      return {\n        ...state,\n        errors: {\n          ...state.errors,\n          fetchUser: action.payload.error\n        },\n        loading: {\n          ...state.loading,\n          fetchUser: false\n        }\n      };\n    case SIGNUP_REQUEST:\n      return {\n        ...state,\n        loading: {\n          ...state.loading,\n          signUp: true\n        }\n      };\n    case SIGNUP_SUCCESS:\n      return {\n        ...state,\n        ...action.payload.user,\n        loading: {\n          ...state.loading,\n          signUp: false\n        }\n      };\n    case SIGNUP_FAILURE:\n      return {\n        ...state,\n        errors: {\n          ...state.errors,\n          signUp: action.payload.error\n        },\n        loading: {\n          ...state.loading,\n          signUp: false\n        }\n      };\n    case LOGIN_REQUEST:\n      return {\n        ...state,\n        loading: {\n          ...state.loading,\n          logIn: true\n        }\n      };\n    case LOGIN_SUCCESS:\n      return {\n        ...state,\n        ...action.payload.user,\n        loading: {\n          ...state.loading,\n          logIn: false\n        }\n      };\n    case LOGIN_FAILURE:\n      return {\n        ...state,\n        errors: {\n          ...state.errors,\n          logIn: action.payload.error\n        },\n        loading: {\n          ...state.loading,\n          logIn: false\n        }\n      };\n    case CONFIRM_TOKEN_REQUEST:\n      return {\n        ...state,\n        loading: {\n          ...state.loading,\n          confirmToken: true\n        }\n      };\n    case CONFIRM_TOKEN_SUCCESS:\n      return {\n        ...state,\n        email: action.payload.email,\n        confirmed: true,\n        loading: {\n          ...state.loading,\n          confirmToken: false\n        }\n      };\n    case CONFIRM_TOKEN_FAILURE:\n      return {\n        ...state,\n        errors: {\n          ...state.errors,\n          confirmToken: action.payload.error\n        },\n        loading: {\n          ...state.loading,\n          confirmToken: false\n        }\n      };\n    case LOGOUT:\n      return {\n        ...initialUserState\n      };\n    case CLEAR_ERROR:\n      return {\n        ...state,\n        errors: initialErrorsState\n      };\n    default:\n      return state;\n  }\n}\n\nexport default user;\n","import {\n  ADD_TODO_REQUEST,\n  ADD_TODO_SUCCESS,\n  ADD_TODO_FAILURE,\n  FETCH_TODOS_REQUEST,\n  FETCH_TODOS_SUCCESS,\n  FETCH_TODOS_FAILURE,\n  SET_SEARCH_TEXT,\n  TodoActionTypes,\n  TodosState,\n  TodosErrorsState,\n  TodosLoadingState,\n  TOGGLE_COMPLETE_REQUEST,\n  TOGGLE_COMPLETE_SUCCESS,\n  TOGGLE_COMPLETE_FAILURE,\n  UPDATE_TEXT_REQUEST,\n  InitialTodoErrorsState,\n  InitialTodoLoadingState,\n  UPDATE_TEXT_SUCCESS,\n  UPDATE_TEXT_FAILURE,\n  DELETE_TODO_REQUEST,\n  DELETE_TODO_SUCCESS,\n  DELETE_TODO_FAILURE,\n  DELETE_COMPLETED_REQUEST,\n  SET_PAGE,\n  SET_FILTER,\n  DELETE_COMPLETED_SUCCESS,\n  TOGGLE_COMPLETE_ALL_REQUEST,\n  TOGGLE_COMPLETE_ALL_SUCCESS,\n  TOGGLE_COMPLETE_ALL_FAILURE,\n  CLEAR_SEARCH_TEXT,\n  LOGOUT\n} from './types';\n\nexport const initialErrorsState: TodosErrorsState = {\n  addTodo: '',\n  fetchTodos: '',\n  clearCompleted: '',\n  toggleAll: ''\n};\nexport const initialLoadingState: TodosLoadingState = {\n  addTodo: false,\n  fetchTodos: false,\n  clearCompleted: false,\n  toggleAll: false\n};\nexport const initialTodoLoadingState: InitialTodoLoadingState = {\n  toggleComplete: false,\n  updateText: false,\n  deleteTodo: false\n};\nexport const initialTodoErrorsState: InitialTodoErrorsState = {\n  toggleComplete: '',\n  updateText: '',\n  deleteTodo: ''\n};\nexport const initialState: TodosState = {\n  ids: [],\n  entities: {},\n  loading: initialLoadingState,\n  errors: initialErrorsState,\n  filter: 'All',\n  page: 1,\n  searchText: '',\n  count: 0,\n  countPerPage: 9,\n  activePage: 1,\n  showRefresh: false\n};\n\nexport default (state = initialState, action: TodoActionTypes) => {\n  switch (action.type) {\n    case CLEAR_SEARCH_TEXT:\n      return {\n        ...state,\n        searchText: ''\n      };\n    case ADD_TODO_REQUEST:\n      return {\n        ...state,\n        loading: {\n          ...state.loading,\n          addTodo: true\n        }\n      };\n    case ADD_TODO_SUCCESS:\n      return {\n        ...state,\n        count: state.count + 1,\n        ids: [action.payload.todo._id, ...state.ids],\n        entities: {\n          ...state.entities,\n          [action.payload.todo._id]: {\n            ...action.payload.todo\n          }\n        },\n        loading: {\n          ...state.loading,\n          addTodo: false\n        }\n      };\n    case ADD_TODO_FAILURE:\n      return {\n        ...state,\n        loading: {\n          ...state.loading,\n          addTodo: false\n        },\n        errors: {\n          ...state.errors,\n          addTodo: action.payload.error\n        }\n      };\n    case FETCH_TODOS_REQUEST:\n      return {\n        ...state,\n        loading: {\n          ...state.loading,\n          fetchTodos: true\n        }\n      };\n    case FETCH_TODOS_SUCCESS:\n      const statesuc = {\n        ...state,\n        entities: {\n          ...action.payload.entities\n        },\n        ids: [...action.payload.ids],\n        count: action.payload.count,\n        loading: {\n          ...state.loading,\n          fetchTodos: false\n        }\n      };\n      console.log('statesuc ', statesuc);\n      return statesuc;\n    case FETCH_TODOS_FAILURE:\n      return {\n        ...state,\n        loading: {\n          ...state.loading,\n          fetchTodos: false\n        },\n        errors: {\n          ...state.errors,\n          fetchTodos: action.payload.error\n        }\n      };\n    case TOGGLE_COMPLETE_REQUEST:\n      return {\n        ...state,\n        entities: {\n          ...state.entities,\n          [action.payload.todoId]: {\n            ...state.entities[action.payload.todoId],\n            complete: action.payload.complete,\n            loading: {\n              ...state.entities[action.payload.todoId].loading,\n              toggleComplete: true\n            },\n            errors: {\n              ...state.entities[action.payload.todoId].errors,\n              toggleComplete: ''\n            }\n          }\n        }\n      };\n    case TOGGLE_COMPLETE_SUCCESS:\n      let count = state.count;\n      if (state.filter !== 'All') {\n        count = count - 1;\n      }\n      return {\n        ...state,\n        count,\n        entities: {\n          ...state.entities,\n          [action.payload.todo._id]: {\n            ...action.payload.todo,\n            loading: {\n              ...state.entities[action.payload.todo._id].loading,\n              toggleComplete: false\n            },\n            errors: {\n              ...state.entities[action.payload.todo._id].errors,\n              toggleComplete: ''\n            }\n          }\n        }\n      };\n    case TOGGLE_COMPLETE_FAILURE:\n      return {\n        ...state,\n        entities: {\n          ...state.entities,\n          [action.payload.todoId]: {\n            ...state.entities[action.payload.todoId],\n            loading: {\n              ...state.entities[action.payload.todoId].loading,\n              toggleComplete: false\n            },\n            errors: {\n              ...state.entities[action.payload.todoId].errors,\n              toggleComplete: action.payload.error\n            }\n          }\n        }\n      };\n    case UPDATE_TEXT_REQUEST:\n      return {\n        ...state,\n        entities: {\n          ...state.entities,\n          [action.payload.todoId]: {\n            ...state.entities[action.payload.todoId],\n            text: action.payload.text,\n            loading: {\n              ...state.entities[action.payload.todoId].loading,\n              updateText: true\n            },\n            errors: {\n              ...state.entities[action.payload.todoId].errors,\n              updateText: ''\n            }\n          }\n        }\n      };\n    case UPDATE_TEXT_SUCCESS:\n      return {\n        ...state,\n        entities: {\n          ...state.entities,\n          [action.payload.todo._id]: {\n            ...action.payload.todo,\n            loading: {\n              ...state.entities[action.payload.todo._id].loading,\n              updateText: false\n            },\n            errors: {\n              ...state.entities[action.payload.todo._id].errors,\n              updateText: ''\n            }\n          }\n        }\n      };\n    case UPDATE_TEXT_FAILURE:\n      return {\n        ...state,\n        entities: {\n          ...state.entities,\n          [action.payload.todoId]: {\n            ...state.entities[action.payload.todoId],\n            text: action.payload.text,\n            loading: {\n              ...state.entities[action.payload.todoId].loading,\n              updateText: false\n            },\n            errors: {\n              ...state.entities[action.payload.todoId].errors,\n              updateText: action.payload.error\n            }\n          }\n        }\n      };\n    case DELETE_TODO_REQUEST:\n      return {\n        ...state,\n        entities: {\n          ...state.entities,\n          [action.payload.todoId]: {\n            ...state.entities[action.payload.todoId],\n            loading: {\n              ...state.entities[action.payload.todoId].loading,\n              deleteTodo: true\n            },\n            errors: {\n              ...state.entities[action.payload.todoId].errors,\n              deleteTodo: ''\n            }\n          }\n        }\n      };\n    case DELETE_TODO_SUCCESS:\n      const {\n        [action.payload.todoId]: removedProp,\n        ...entities\n      } = state.entities;\n      return {\n        ...state,\n        entities,\n        count: state.count - 1,\n        ids: state.ids.filter(id => id !== action.payload.todoId)\n      };\n    case DELETE_TODO_FAILURE:\n      return {\n        ...state,\n        entities: {\n          ...state.entities,\n          [action.payload.todoId]: {\n            ...state.entities[action.payload.todoId],\n            loading: {\n              ...state.entities[action.payload.todoId].loading,\n              deleteTodo: false\n            },\n            errors: {\n              ...state.entities[action.payload.todoId].errors,\n              deleteTodo: action.payload.error\n            }\n          }\n        }\n      };\n    case DELETE_COMPLETED_REQUEST:\n      return {\n        ...state,\n        loading: {\n          ...state.loading,\n          clearCompleted: true\n        }\n      };\n    case DELETE_COMPLETED_SUCCESS:\n      const { todoIds } = action.payload;\n      const newEntities = { ...state.entities };\n      todoIds.forEach(id => delete newEntities[id]);\n\n      const newIds = state.ids.filter(id => todoIds.indexOf(id) === -1);\n      const newCount = state.count - todoIds.length;\n      return {\n        ...state,\n        count: newCount,\n        ids: newIds,\n        entities: newEntities,\n        loading: {\n          ...state.loading,\n          clearCompleted: false\n        }\n      };\n    case TOGGLE_COMPLETE_ALL_REQUEST:\n      const mockEntities = { ...state.entities };\n      action.payload.todoIds.forEach(\n        id => (mockEntities[id].complete = action.payload.complete)\n      );\n      return {\n        ...state,\n        errors: {\n          ...state.errors,\n          toggleAll: ''\n        },\n        entities: mockEntities,\n        loading: {\n          ...state.loading,\n          toggleAll: true\n        }\n      };\n    case TOGGLE_COMPLETE_ALL_SUCCESS:\n      let toggleAllCount = state.count;\n      if (state.filter !== 'All') {\n        toggleAllCount =\n          toggleAllCount - Object.keys(action.payload.entities).length;\n      }\n      return {\n        ...state,\n        count: toggleAllCount,\n        entities: {\n          ...state.entities,\n          ...action.payload.entities\n        },\n        loading: {\n          ...state.loading,\n          toggleAll: false\n        }\n      };\n    case TOGGLE_COMPLETE_ALL_FAILURE:\n      return {\n        ...state,\n        errors: {\n          ...state.errors,\n          toggleAll: action.payload.error\n        },\n        loading: {\n          ...state.loading,\n          toggleAll: false\n        }\n      };\n    case SET_SEARCH_TEXT:\n      return {\n        ...state,\n        searchText: action.payload.text\n      };\n    case SET_PAGE:\n      return {\n        ...state,\n        page: action.payload.page\n      };\n    case SET_FILTER:\n      return {\n        ...state,\n        filter: action.payload.filter\n      };\n    case LOGOUT:\n      return {\n        ...initialState\n      };\n    default:\n      return state;\n  }\n};\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nimport user from './user/reducers';\nimport todos from './todos/reducers';\n\nconst rootReducer = combineReducers({\n  user,\n  todos\n});\n\nexport type AppState = ReturnType<typeof rootReducer>;\n\nexport default function configureStore() {\n  const middlewares = [thunkMiddleware];\n  const middleWareEnhancer = applyMiddleware(...middlewares);\n\n  const store = createStore(\n    rootReducer,\n    composeWithDevTools(middleWareEnhancer)\n  );\n\n  return store;\n}\n","export const ADD_TODO_REQUEST = 'ADD_TODO_REQUEST';\nexport const ADD_TODO_SUCCESS = 'ADD_TODO_SUCCESS';\nexport const ADD_TODO_FAILURE = 'ADD_TODO_FAILURE';\nexport const UPDATE_TEXT_REQUEST = 'UPDATE_TODO_TEXT_REQUEST';\nexport const UPDATE_TEXT_SUCCESS = 'UPDATE_TODO_TEXT_SUCCESS';\nexport const UPDATE_TEXT_FAILURE = 'UPDATE_TODO_TEXT_FAILURE';\nexport const TOGGLE_COMPLETE_REQUEST = 'TOGGLE_TODOS_REQUEST';\nexport const TOGGLE_COMPLETE_SUCCESS = 'TOGGLE_TODOS_SUCCESS';\nexport const TOGGLE_COMPLETE_FAILURE = 'TOGGLE_TODOS_FAILURE';\nexport const TOGGLE_COMPLETE_ALL_REQUEST = 'TOGGLE_ALL_TODO_REQUEST';\nexport const TOGGLE_COMPLETE_ALL_SUCCESS = 'TOGGLE_ALL_TODO_SUCCESS';\nexport const TOGGLE_COMPLETE_ALL_FAILURE = 'TOGGLE_ALL_TODO_FAILURE';\nexport const DELETE_TODO_REQUEST = 'DELETE_TODO_REQUEST';\nexport const DELETE_TODO_SUCCESS = 'DELETE_TODO_SUCCESS';\nexport const DELETE_TODO_FAILURE = 'DELETE_TODO_FAILURE';\nexport const DELETE_COMPLETED_REQUEST = 'DELETE_COMPLETED_REQUEST';\nexport const DELETE_COMPLETED_SUCCESS = 'DELETE_COMPLETED_SUCCESS';\nexport const DELETE_COMPLETED_FAILURE = 'DELETE_COMPLETED_FAILURE';\nexport const FETCH_TODOS_REQUEST = 'FETCH_TODOS_REQUEST';\nexport const FETCH_TODOS_SUCCESS = 'FETCH_TODOS_SUCCESS';\nexport const FETCH_TODOS_FAILURE = 'FETCH_TODOS_FAILURE';\nexport const SET_PAGE = 'SET_PAGE';\nexport const SET_FILTER = 'SET_FILTER';\nexport const LOGOUT = 'LOGOUT';\nexport const SET_SEARCH_TEXT = 'SET_SEARCH_TEXT';\nexport const CLEAR_SEARCH_TEXT = 'CLEAR_SEARCH_TEXT';\n\nexport interface InitialTodoLoadingState {\n  toggleComplete: boolean;\n  updateText: boolean;\n  deleteTodo: boolean;\n  [key: string]: boolean;\n}\nexport interface InitialTodoErrorsState {\n  toggleComplete: string;\n  updateText: string;\n  deleteTodo: string;\n}\nexport interface Todo {\n  complete: boolean;\n  _id: string;\n  text: string;\n  userId: string;\n  createdAt: string;\n  updatedAt: string;\n  id?: string;\n  __v?: number;\n  loading: InitialTodoLoadingState;\n  errors: InitialTodoErrorsState;\n}\n\nexport interface TodosLoadingState {\n  addTodo: boolean;\n  fetchTodos: boolean;\n  clearCompleted: boolean;\n  toggleAll: boolean;\n}\nexport interface TodosErrorsState {\n  addTodo: string;\n  fetchTodos: string;\n  clearCompleted: string;\n  toggleAll: string;\n}\n\nexport type TodosFilters = 'All' | 'Active' | 'Completed';\nexport interface Entities {\n  [_id: string]: Todo;\n}\nexport interface TodosState {\n  ids: string[];\n  entities: Entities;\n  filter: TodosFilters;\n  page: number;\n  errors: TodosErrorsState;\n  loading: TodosLoadingState;\n  searchText: string;\n  count: number;\n  countPerPage: number;\n  activePage: number;\n  showRefresh: boolean;\n}\n\ninterface addTodoRequest {\n  type: typeof ADD_TODO_REQUEST;\n}\ninterface addTodoSuccess {\n  type: typeof ADD_TODO_SUCCESS;\n  payload: {\n    todo: Todo;\n  };\n}\ninterface addTodoFailure {\n  type: typeof ADD_TODO_FAILURE;\n  payload: {\n    error: string;\n  };\n}\ninterface fetchTodosRequest {\n  type: typeof FETCH_TODOS_REQUEST;\n}\ninterface fetchTodosSuccess {\n  type: typeof FETCH_TODOS_SUCCESS;\n  payload: {\n    entities: {\n      [_id: string]: Todo;\n    };\n    ids: string[];\n    count: number;\n  };\n}\ninterface fetchTodosFailure {\n  type: typeof FETCH_TODOS_FAILURE;\n  payload: {\n    error: string;\n  };\n}\ninterface toggleCompleteRequest {\n  type: typeof TOGGLE_COMPLETE_REQUEST;\n  payload: {\n    todoId: string;\n    complete: boolean;\n  };\n}\ninterface toggleCompleteSuccess {\n  type: typeof TOGGLE_COMPLETE_SUCCESS;\n  payload: {\n    todo: Todo;\n  };\n}\ninterface toggleCompleteFailure {\n  type: typeof TOGGLE_COMPLETE_FAILURE;\n  payload: {\n    error: string;\n    todoId: string;\n    complete: boolean;\n  };\n}\ninterface updateTextRequest {\n  type: typeof UPDATE_TEXT_REQUEST;\n  payload: {\n    todoId: string;\n    text: string;\n  };\n}\ninterface updateTextSuccess {\n  type: typeof UPDATE_TEXT_SUCCESS;\n  payload: {\n    todo: Todo;\n  };\n}\ninterface updateTextFailure {\n  type: typeof UPDATE_TEXT_FAILURE;\n  payload: {\n    error: string;\n    todoId: string;\n    text: string;\n  };\n}\ninterface setSearchText {\n  type: typeof SET_SEARCH_TEXT;\n  payload: {\n    text: string;\n  };\n}\ninterface clearSearchText {\n  type: typeof CLEAR_SEARCH_TEXT;\n}\ninterface deleteTodoRequest {\n  type: typeof DELETE_TODO_REQUEST;\n  payload: {\n    todoId: string;\n  };\n}\ninterface deleteTodoSuccess {\n  type: typeof DELETE_TODO_SUCCESS;\n  payload: {\n    todoId: string;\n  };\n}\ninterface deleteTodoFailure {\n  type: typeof DELETE_TODO_FAILURE;\n  payload: {\n    error: string;\n    todoId: string;\n  };\n}\ninterface clearCompletedRequest {\n  type: typeof DELETE_COMPLETED_REQUEST;\n}\ninterface clearCompletedSuccess {\n  type: typeof DELETE_COMPLETED_SUCCESS;\n  payload: {\n    todoIds: string[];\n  };\n} // not finished\ninterface clearCompletedFailure {\n  type: typeof DELETE_COMPLETED_FAILURE;\n  payload: {\n    error: string;\n  };\n} // not finished\ninterface setPage {\n  type: typeof SET_PAGE;\n  payload: {\n    page: number;\n  };\n}\ninterface setFilter {\n  type: typeof SET_FILTER;\n  payload: {\n    filter: TodosFilters;\n  };\n}\ninterface toggleCompleteAllRequest {\n  type: typeof TOGGLE_COMPLETE_ALL_REQUEST;\n  payload: {\n    todoIds: string[];\n    complete: boolean;\n  };\n}\ninterface toggleCompleteAllSuccess {\n  type: typeof TOGGLE_COMPLETE_ALL_SUCCESS;\n  payload: {\n    entities: {\n      [_id: string]: Todo;\n    };\n  };\n}\ninterface toggleCompleteAllFailure {\n  type: typeof TOGGLE_COMPLETE_ALL_FAILURE;\n  payload: {\n    error: string;\n  };\n}\ninterface logOut {\n  type: typeof LOGOUT;\n}\nexport type TodoActionTypes =\n  | addTodoRequest\n  | addTodoSuccess\n  | addTodoFailure\n  | fetchTodosRequest\n  | fetchTodosSuccess\n  | fetchTodosFailure\n  | setSearchText\n  | clearSearchText\n  | toggleCompleteRequest\n  | toggleCompleteSuccess\n  | toggleCompleteFailure\n  | updateTextRequest\n  | updateTextSuccess\n  | updateTextFailure\n  | deleteTodoRequest\n  | deleteTodoSuccess\n  | deleteTodoFailure\n  | clearCompletedRequest\n  | clearCompletedSuccess\n  | clearCompletedFailure\n  | setPage\n  | setFilter\n  | toggleCompleteAllRequest\n  | toggleCompleteAllSuccess\n  | toggleCompleteAllFailure\n  | logOut;\n","import axios from 'axios';\n\nexport default (token: string | null) => {\n  if (token) {\n    axios.defaults.headers.common.authorization = `Bearer ${token}`;\n  } else {\n    delete axios.defaults.headers.common.authorization;\n  }\n};\n","export const timeDifference = (current: number, previous: number) => {\n  const milliSecondsPerMinute = 60 * 1000;\n  const milliSecondsPerHour = milliSecondsPerMinute * 60;\n  const milliSecondsPerDay = milliSecondsPerHour * 24;\n  const milliSecondsPerMonth = milliSecondsPerDay * 30;\n  const milliSecondsPerYear = milliSecondsPerDay * 365;\n\n  const elapsed = current - previous;\n\n  if (elapsed < milliSecondsPerMinute / 3) {\n    return 'just now';\n  }\n\n  if (elapsed < milliSecondsPerMinute) {\n    return 'less than 1 min ago';\n  }\n\n  if (elapsed < milliSecondsPerHour) {\n    return `${Math.round(elapsed / milliSecondsPerMinute)} min ago`;\n  }\n\n  if (elapsed < milliSecondsPerDay) {\n    return `${Math.round(elapsed / milliSecondsPerHour)} h ago`;\n  }\n\n  if (elapsed < milliSecondsPerMonth) {\n    return `${Math.round(elapsed / milliSecondsPerDay)} days ago`;\n  }\n\n  if (elapsed < milliSecondsPerYear) {\n    return `${Math.round(elapsed / milliSecondsPerMonth)} mo ago`;\n  }\n\n  return `${Math.round(elapsed / milliSecondsPerYear)} years ago`;\n};\n\nexport default (date: string) => {\n  const now = new Date().getTime();\n  const updated = new Date(date).getTime();\n  return timeDifference(now, updated);\n};\n","import axios from 'axios';\nimport {\n  LOGOUT,\n  LOGIN_REQUEST,\n  LOGIN_FAILURE,\n  LOGIN_SUCCESS,\n  SIGNUP_REQUEST,\n  SIGNUP_FAILURE,\n  SIGNUP_SUCCESS,\n  CONFIRM_TOKEN_REQUEST,\n  CONFIRM_TOKEN_SUCCESS,\n  CONFIRM_TOKEN_FAILURE,\n  CLEAR_ERROR,\n  FETCH_USER_REQUEST,\n  FETCH_USER_FAILURE,\n  FETCH_USER_SUCCESS\n} from './types';\nimport { Action } from 'redux';\nimport { ThunkAction } from 'redux-thunk';\nimport { AppState } from '../index';\n\nexport const logOut = () => ({\n  type: LOGOUT\n});\n\nexport const clearError = () => ({\n  type: CLEAR_ERROR\n});\n\nexport interface credentials {\n  email: string;\n  password: string;\n}\n\nexport const logIn = (\n  { email, password }: credentials,\n  callback: (token: string) => void\n): ThunkAction<void, AppState, null, Action<string>> => async (\n  dispatch,\n  _getState\n) => {\n  dispatch({ type: LOGIN_REQUEST });\n  try {\n    const {\n      data: { user }\n    } = await axios.post('/api/auth', {\n      email,\n      password\n    });\n    localStorage.setItem('token', user.token);\n    callback(user.token);\n    dispatch({ type: LOGIN_SUCCESS, payload: { user } });\n  } catch (error) {\n    dispatch({\n      type: LOGIN_FAILURE,\n      payload: { error: error.response.data.error }\n    });\n  }\n};\n\nexport const signUp = (\n  { email, password }: credentials,\n  callback: (token: string) => void\n): ThunkAction<void, AppState, null, Action<string>> => async (\n  dispatch,\n  _getState\n) => {\n  dispatch({ type: SIGNUP_REQUEST });\n  try {\n    const {\n      data: { user }\n    } = await axios.post('/api/user', {\n      email,\n      password\n    }); // watch arg\n    localStorage.setItem('token', user.token);\n    callback(user.token);\n    dispatch({ type: SIGNUP_SUCCESS, payload: { user } });\n  } catch (error) {\n    dispatch({\n      type: SIGNUP_FAILURE,\n      payload: { error: error.response.data.error }\n    });\n  }\n};\n\nexport const confirmToken = (\n  token: string\n): ThunkAction<void, AppState, null, Action<string>> => async (\n  dispatch,\n  _getState\n) => {\n  dispatch({ type: CONFIRM_TOKEN_REQUEST });\n  try {\n    const {\n      data: { user }\n    } = await axios.post('/api/auth/confirm', {\n      token\n    }); // watch arg\n    dispatch({ type: CONFIRM_TOKEN_SUCCESS, payload: { email: user.email } });\n  } catch (error) {\n    dispatch({\n      type: CONFIRM_TOKEN_FAILURE,\n      payload: { error: error.response.data.error }\n    });\n  }\n};\n\nexport const fetchUser = (): ThunkAction<\n  void,\n  AppState,\n  null,\n  Action<string>\n> => async (dispatch, _getState) => {\n  dispatch({ type: FETCH_USER_REQUEST });\n  try {\n    const {\n      data: { user }\n    } = await axios.get(`/api/user/current`);\n    dispatch({ type: FETCH_USER_SUCCESS, payload: { user } });\n  } catch (error) {\n    dispatch({ type: FETCH_USER_FAILURE, payload: { error } });\n  }\n};\n","import React from 'react';\nimport {\n  Container,\n  Row,\n  Col,\n  Card,\n  CardHeader,\n  CardBody,\n  Form,\n  Button,\n  FormGroup,\n  Label,\n  Input,\n  FormFeedback,\n  Alert,\n  FormText\n} from 'reactstrap';\nimport isEmail from 'validator/lib/isEmail';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { setAuthorizationHeader } from '../../utils';\n\nimport { AppState } from '../../store';\n\nimport { logIn, clearError, credentials } from '../../store/user/actions';\nimport { withRouter, RouteComponentProps } from 'react-router';\n\nimport { FormState } from './types';\n\ninterface LoginProps extends RouteComponentProps {\n  logIn: (credentials: credentials, callback: (token: string) => void) => void;\n  clearError: typeof clearError;\n  loading: boolean;\n  error: string;\n}\n\nclass Login extends React.Component<LoginProps, FormState> {\n  state = {\n    data: {\n      email: '',\n      password: ''\n    },\n    errors: {\n      server: '',\n      email: '',\n      password: ''\n    }\n  };\n\n  componentDidUpdate(_prevProps: LoginProps, { errors }: FormState) {\n    const { error } = this.props;\n    if (error !== errors.server) {\n      this.setState(prevState => ({\n        errors: { ...prevState.errors, server: error }\n      }));\n    }\n  }\n\n  componentWillUnmount() {\n    this.props.clearError();\n  }\n\n  onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { data } = this.state;\n    const { name, value } = e.target;\n    this.setState({\n      data: { ...data, [name]: value }\n    });\n  };\n\n  onSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    const { data } = this.state;\n    const errors = this.validate(data);\n    this.setState({ errors });\n    if (Object.keys(errors).length === 0) {\n      await this.props.logIn(data, (token: string) => {\n        setAuthorizationHeader(token);\n        this.props.history.push('/');\n      });\n    }\n  };\n\n  validate = (data: FormState['data']) => {\n    const errors: any = {};\n    if (!isEmail(data.email)) {\n      errors.email = 'Invalid email';\n    }\n    if (!data.password) {\n      errors.password = \"Can't be blank\";\n    }\n    return errors;\n  };\n\n  render() {\n    const { data, errors } = this.state;\n    return (\n      <Container style={{ height: '100vh' }}>\n        <Row\n          className='align-items-center justify-content-center'\n          style={{ height: '100vh' }}>\n          <Col xs='12' sm='8' lg='6'>\n            <Card>\n              <CardHeader>Welcome Back!</CardHeader>\n              <CardBody>\n                <Form onSubmit={this.onSubmit}>\n                  {!!errors.server && (\n                    <Alert color='danger'>{errors.server}</Alert>\n                  )}\n                  <FormGroup>\n                    <Label className='d-block' for='email'>\n                      Email\n                      <Input\n                        className={\n                          errors.email\n                            ? 'form-control is-invalid'\n                            : 'form-control'\n                        }\n                        value={data.email}\n                        onChange={this.onChange}\n                        type='email'\n                        name='email'\n                        id='email'\n                        placeholder='example@domain.com'\n                      />\n                      <FormFeedback>{errors.email}</FormFeedback>\n                    </Label>\n                  </FormGroup>\n                  <FormGroup>\n                    <Label className='d-block' for='password'>\n                      Password\n                      <Input\n                        className={\n                          errors.password\n                            ? 'form-control is-invalid'\n                            : 'form-control'\n                        }\n                        value={data.password}\n                        onChange={this.onChange}\n                        type='password'\n                        name='password'\n                        id='password'\n                        placeholder='Password'\n                      />\n                      <FormFeedback>{errors.password}</FormFeedback>\n                    </Label>\n                  </FormGroup>\n                  <Button\n                    disabled={this.props.loading}\n                    type='submit'\n                    color='primary'\n                    className='btn-block'>\n                    Login\n                  </Button>\n                  <FormText className='text-center'>\n                    <Link to='/signup'>Signup</Link> if you do not have an\n                    account\n                  </FormText>\n                </Form>\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nconst mapStateToProps = ({ user }: AppState) => ({\n  loading: user.loading.logIn,\n  error: user.errors.logIn\n});\n\nexport default connect(\n  mapStateToProps,\n  {\n    logIn,\n    clearError\n  }\n)(withRouter(Login));\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { ClipLoader } from 'react-spinners';\nimport { css } from '@emotion/core';\nimport { RouteComponentProps, match } from 'react-router-dom';\nimport { Alert, Container } from 'reactstrap';\n\nimport { AppState } from '../../store';\n\nimport { confirmToken, clearError } from '../../store/user/actions';\n\nconst override: any = css`\n  display: block;\n  margin: 0 auto;\n`;\n\ninterface UrlParams {\n  token: string;\n}\n\ninterface ConfirmTokenProps extends RouteComponentProps {\n  confirmToken: (token: string) => void;\n  clearError: typeof clearError;\n  error: string;\n  match: match<UrlParams>;\n  loading: boolean;\n  confirmed: boolean;\n  email: string;\n}\n\ninterface ConfirmTokenState {\n  error: string;\n}\nclass ConfirmToken extends Component<ConfirmTokenProps, ConfirmTokenState> {\n  state = {\n    error: ''\n  };\n\n  componentDidUpdate(\n    _prevProps: ConfirmTokenProps,\n    { error }: ConfirmTokenState\n  ) {\n    if (this.props.error !== error) {\n      this.setState({ error: this.props.error });\n    }\n  }\n\n  componentDidMount = () => {\n    const { confirmToken, match } = this.props;\n    confirmToken(match.params.token);\n  };\n\n  componentWillUnmount = () => {\n    this.props.clearError();\n  };\n\n  render() {\n    const { loading, confirmed, email } = this.props;\n    const { error } = this.state;\n    return (\n      <Container>\n        {!!loading && (\n          <ClipLoader\n            css={override}\n            sizeUnit={'px'}\n            size={50}\n            color={'#123abc'}\n            loading={loading}\n          />\n        )}\n        {error && (\n          <Alert color='danger'>\n            <h3 className='alert-heading text-center'>{error}</h3>\n          </Alert>\n        )}\n        {confirmed && (\n          <Alert color='success'>\n            <h4 className='alert-heading'>\n              Congratulations! <strong>{email}</strong> You have successfully\n              verified your account\n            </h4>\n          </Alert>\n        )}\n      </Container>\n    );\n  }\n}\n\nconst mapStateToProps = ({ user }: AppState) => ({\n  loading: user.loading.confirmToken,\n  error: user.errors.confirmToken,\n  confirmed: !!user.confirmed,\n  email: user.email\n});\n\nexport default connect(\n  mapStateToProps,\n  {\n    confirmToken,\n    clearError\n  }\n)(ConfirmToken);\n","import React from 'react';\nimport {\n  Container,\n  Row,\n  Col,\n  Card,\n  CardHeader,\n  CardBody,\n  Form,\n  Button,\n  FormGroup,\n  Label,\n  Input,\n  FormFeedback,\n  Alert,\n  FormText\n} from 'reactstrap';\nimport { setAuthorizationHeader } from '../../utils';\nimport isEmail from 'validator/lib/isEmail';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { withRouter, RouteComponentProps } from 'react-router';\n\nimport { AppState } from '../../store';\n\nimport { signUp, clearError, credentials } from '../../store/user/actions';\nimport { FormState } from './types';\n\ninterface SignUpProps extends RouteComponentProps {\n  signUp: (credentials: credentials, callback: (token: string) => void) => void;\n  clearError: typeof clearError;\n  loading: boolean;\n  error: string;\n}\n\nclass SignUp extends React.Component<SignUpProps, FormState> {\n  state = {\n    data: {\n      email: '',\n      password: ''\n    },\n    errors: {\n      server: '',\n      email: '',\n      password: ''\n    }\n  };\n\n  componentDidUpdate(_prevProps: SignUpProps, { errors }: FormState) {\n    const { error } = this.props;\n    if (error !== errors.server) {\n      this.setState(prevState => ({\n        errors: { ...prevState.errors, server: error }\n      }));\n    }\n  }\n\n  componentWillUnmount() {\n    this.props.clearError();\n  }\n\n  onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { data } = this.state;\n    const { name, value } = e.target;\n    this.setState({\n      data: { ...data, [name]: value }\n    });\n  };\n\n  onSubmit = async (e: React.FormEvent<HTMLFormElement>): Promise<void> => {\n    e.preventDefault();\n    const { data } = this.state;\n    const errors = this.validate(data);\n    this.setState({ errors });\n    if (Object.keys(errors).length === 0) {\n      await this.props.signUp(data, (token: string) => {\n        setAuthorizationHeader(token);\n        this.props.history.push('/');\n      });\n    }\n  };\n\n  validate = (data: FormState['data']) => {\n    const errors: any = {};\n    if (!isEmail(data.email)) {\n      errors.email = 'Invalid email';\n    }\n    if (!data.password) {\n      errors.password = \"Can't be blank\";\n    }\n    return errors;\n  };\n\n  render() {\n    const { data, errors } = this.state;\n    return (\n      <Container style={{ height: '100vh' }}>\n        <Row\n          className='align-items-center justify-content-center'\n          style={{ height: '100vh' }}>\n          <Col xs='12' sm='8' lg='6'>\n            <Card>\n              <CardHeader>Join the Club!</CardHeader>\n              <CardBody>\n                <Form onSubmit={this.onSubmit}>\n                  {!!errors.server && (\n                    <Alert color='danger'>{errors.server}</Alert>\n                  )}\n                  <FormGroup>\n                    <Label className='d-block' for='email'>\n                      Email\n                      <Input\n                        className={\n                          errors.email\n                            ? 'form-control is-invalid'\n                            : 'form-control'\n                        }\n                        value={data.email}\n                        onChange={this.onChange}\n                        type='email'\n                        name='email'\n                        id='email'\n                        placeholder='example@domain.com'\n                      />\n                      <FormFeedback>{errors.email}</FormFeedback>\n                    </Label>\n                  </FormGroup>\n                  <FormGroup>\n                    <Label className='d-block' for='password'>\n                      Password\n                      <Input\n                        className={\n                          errors.password\n                            ? 'form-control is-invalid'\n                            : 'form-control'\n                        }\n                        value={data.password}\n                        onChange={this.onChange}\n                        type='password'\n                        name='password'\n                        id='password'\n                        placeholder='Password'\n                      />\n                      <FormFeedback>{errors.password}</FormFeedback>\n                    </Label>\n                  </FormGroup>\n                  <Button\n                    disabled={this.props.loading}\n                    type='submit'\n                    color='primary'\n                    className='btn-block'>\n                    Sign Up\n                  </Button>\n                  <FormText className='text-center'>\n                    or <Link to='/login'>Login</Link> if you have an account\n                  </FormText>\n                </Form>\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\nconst mapStateToProps = ({ user }: AppState) => ({\n  loading: user.loading.signUp,\n  error: user.errors.signUp\n});\n\nexport default connect(\n  mapStateToProps,\n  {\n    signUp,\n    clearError\n  }\n)(withRouter(SignUp));\n","import axios from 'axios';\nimport { Action, AnyAction } from 'redux';\nimport { ThunkAction } from 'redux-thunk';\nimport { AppState } from '../index';\nimport { schema, normalize } from 'normalizr';\nimport {\n  ADD_TODO_REQUEST,\n  ADD_TODO_SUCCESS,\n  ADD_TODO_FAILURE,\n  FETCH_TODOS_REQUEST,\n  FETCH_TODOS_FAILURE,\n  FETCH_TODOS_SUCCESS,\n  TOGGLE_COMPLETE_REQUEST,\n  TOGGLE_COMPLETE_SUCCESS,\n  TOGGLE_COMPLETE_FAILURE,\n  SET_SEARCH_TEXT,\n  CLEAR_SEARCH_TEXT,\n  UPDATE_TEXT_REQUEST,\n  UPDATE_TEXT_SUCCESS,\n  UPDATE_TEXT_FAILURE,\n  Todo,\n  TodosFilters,\n  DELETE_TODO_REQUEST,\n  DELETE_TODO_FAILURE,\n  DELETE_TODO_SUCCESS,\n  DELETE_COMPLETED_REQUEST,\n  SET_PAGE,\n  SET_FILTER,\n  DELETE_COMPLETED_FAILURE,\n  DELETE_COMPLETED_SUCCESS,\n  TOGGLE_COMPLETE_ALL_REQUEST,\n  TOGGLE_COMPLETE_ALL_FAILURE,\n  TOGGLE_COMPLETE_ALL_SUCCESS\n} from './types';\nimport { initialTodoLoadingState, initialTodoErrorsState } from './reducers';\n\nexport interface AddTodoArgs {\n  text: string;\n  userId: string;\n}\nexport const addTodo = ({\n  text,\n  userId\n}: AddTodoArgs): ThunkAction<void, AppState, void, AnyAction> => async (\n  dispatch,\n  _getState\n) => {\n  dispatch({ type: ADD_TODO_REQUEST });\n  try {\n    const {\n      data: { todo }\n    } = await axios.post('/api/todo', {\n      text,\n      userId\n    });\n    dispatch({\n      type: ADD_TODO_SUCCESS,\n      payload: {\n        todo: {\n          ...todo,\n          loading: initialTodoLoadingState,\n          errors: initialTodoErrorsState\n        }\n      }\n    });\n  } catch (error) {\n    dispatch({\n      type: ADD_TODO_FAILURE,\n      payload: { error: error.response.data.error }\n    });\n  }\n};\n\nexport interface ToggleTodoArgs {\n  todoId: string;\n  complete: boolean;\n  userId: string;\n}\nexport const toggleComplete = ({\n  todoId,\n  complete,\n  userId\n}: ToggleTodoArgs): ThunkAction<void, AppState, void, AnyAction> => async (\n  dispatch,\n  _getState\n) => {\n  dispatch({ type: TOGGLE_COMPLETE_REQUEST, payload: { todoId, complete } });\n  try {\n    const {\n      data: { todo }\n    } = await axios.post('/api/todo/toggleComplete', {\n      todoId,\n      complete,\n      userId\n    });\n    dispatch({ type: TOGGLE_COMPLETE_SUCCESS, payload: { todo } });\n  } catch (error) {\n    dispatch({\n      type: TOGGLE_COMPLETE_FAILURE,\n      payload: { error: error.response.data.error, todoId, complete: !complete }\n    });\n  }\n};\n\nexport interface UpdateTextArgs {\n  todoId: string;\n  text: string;\n}\nexport const updateText = ({\n  todoId,\n  text\n}: UpdateTextArgs): ThunkAction<void, AppState, void, AnyAction> => async (\n  dispatch,\n  getState\n) => {\n  const { user } = getState();\n  dispatch({ type: UPDATE_TEXT_REQUEST, payload: { todoId, text } });\n  try {\n    const {\n      data: { todo }\n    } = await axios.post('/api/todo/updateText', {\n      todoId,\n      text,\n      userId: user._id\n    });\n    dispatch({ type: UPDATE_TEXT_SUCCESS, payload: { todo } });\n  } catch (error) {\n    dispatch({\n      type: UPDATE_TEXT_FAILURE,\n      payload: { error: error.response.data.error, todoId, text }\n    });\n  }\n};\n\nconst todo = new schema.Entity('todos');\nexport interface FetchTodosArgs {\n  page: number;\n  filter: TodosFilters;\n  searchText?: string;\n}\nexport const fetchTodos = ({\n  page,\n  filter,\n  searchText\n}: FetchTodosArgs): ThunkAction<void, AppState, void, AnyAction> => async (\n  dispatch,\n  _getState\n) => {\n  dispatch({ type: FETCH_TODOS_REQUEST });\n  try {\n    const offset = (page - 1) * 9;\n    const params: any = { offset, limit: 9, filter };\n    if (searchText) {\n      params.searchText = searchText;\n    }\n    const response = await axios.get('/api/user/todos', {\n      params\n    });\n\n    const {\n      result: todoIds,\n      entities: { todos }\n    } = normalize(\n      response.data.todos.map((t: Todo) => ({\n        ...t,\n        id: t._id,\n        loading: initialTodoLoadingState,\n        errors: initialTodoErrorsState\n      })),\n      [todo]\n    );\n    dispatch({\n      type: FETCH_TODOS_SUCCESS,\n      payload: { ids: todoIds, entities: todos, count: response.data.count }\n    });\n  } catch (error) {\n    console.log('error!', error);\n    dispatch({\n      type: FETCH_TODOS_FAILURE,\n      payload: { error }\n    });\n  }\n};\n\nexport const setSearchText = (\n  text: string\n): ThunkAction<void, AppState, void, AnyAction> => dispatch => {\n  dispatch({ type: SET_SEARCH_TEXT, payload: { text } });\n};\n\nexport const clearSearchText = (): ThunkAction<\n  void,\n  AppState,\n  void,\n  AnyAction\n> => dispatch => {\n  dispatch({ type: CLEAR_SEARCH_TEXT });\n};\n\nexport interface DeleteTodoArgs {\n  todoId: string;\n  userId: string;\n}\nexport const deleteTodo = ({\n  todoId,\n  userId\n}: DeleteTodoArgs): ThunkAction<void, AppState, void, AnyAction> => async (\n  dispatch,\n  _getState\n) => {\n  dispatch({ type: DELETE_TODO_REQUEST, payload: { todoId } });\n  try {\n    const { data } = await axios.post('/api/todo/delete', {\n      todoId,\n      userId\n    });\n    dispatch({ type: DELETE_TODO_SUCCESS, payload: { todoId: data.todoId } });\n  } catch (error) {\n    dispatch({\n      type: DELETE_TODO_FAILURE,\n      payload: { todoId, error: error.response.data.error }\n    });\n  }\n};\n\nexport const clearCompleted = (): ThunkAction<\n  void,\n  AppState,\n  void,\n  AnyAction\n> => async (dispatch, getState) => {\n  const {\n    todos: { ids, entities },\n    user\n  } = getState();\n  const completedTodoIds = ids.filter((id: string) => entities[id].complete);\n  dispatch({ type: DELETE_COMPLETED_REQUEST });\n  try {\n    const {\n      data: { todoIds }\n    } = await axios.post('/api/todo/deleteMany', {\n      todoIds: completedTodoIds,\n      userId: user._id\n    });\n    dispatch({ type: DELETE_COMPLETED_SUCCESS, payload: { todoIds } });\n  } catch (error) {\n    dispatch({\n      type: DELETE_COMPLETED_FAILURE,\n      payload: { todoIds: completedTodoIds, error: error.response.data.error }\n    });\n  }\n};\n\nexport const setPage = (\n  page: number\n): ThunkAction<void, AppState, void, AnyAction> => dispatch => {\n  dispatch({ type: SET_PAGE, payload: { page } });\n};\n\nexport const setFilter = (\n  filter: TodosFilters\n): ThunkAction<void, AppState, void, AnyAction> => dispatch => {\n  dispatch({ type: SET_FILTER, payload: { filter } });\n};\n\nexport const toggleAll = (\n  complete: boolean\n): ThunkAction<void, AppState, void, AnyAction> => async (\n  dispatch,\n  getState\n) => {\n  const {\n    todos: { ids, entities },\n    user\n  } = getState();\n  const todoIds = ids.filter(id => entities[id].complete !== complete);\n  dispatch({\n    type: TOGGLE_COMPLETE_ALL_REQUEST,\n    payload: { todoIds, complete }\n  });\n  try {\n    const {\n      data: { todos }\n    } = await axios.post('/api/todo/toggleCompleteMany', {\n      todoIds,\n      userId: user._id,\n      complete\n    });\n    const { entities } = normalize(\n      todos.map((t: Todo) => ({\n        ...t,\n        id: t._id,\n        loading: initialTodoLoadingState,\n        errors: initialTodoErrorsState\n      })),\n      [todo]\n    );\n    dispatch({\n      type: TOGGLE_COMPLETE_ALL_SUCCESS,\n      payload: { entities: entities.todos }\n    });\n  } catch (error) {\n    dispatch({\n      type: TOGGLE_COMPLETE_ALL_FAILURE,\n      payload: { error: error.response.data.error }\n    });\n  }\n};\n","import React, { Component } from 'react';\nimport { Input, Form } from 'reactstrap';\nimport { connect } from 'react-redux';\n\nimport { updateText, UpdateTextArgs } from '../../../../store/todos/actions';\n\ninterface TodoInputProps {\n  todoId: string;\n  todoText: string;\n  handleIsEditing: () => void;\n  updateText: ({ todoId, text }: UpdateTextArgs) => void;\n}\n\ninterface TodoInputString {\n  [text: string]: string;\n}\n\nclass TodoInput extends Component<TodoInputProps, TodoInputString> {\n  state = {\n    text: ''\n  };\n\n  componentDidMount = () => {\n    this.setState({ text: this.props.todoText });\n  };\n\n  onSubmit = async (\n    e: React.FormEvent<HTMLFormElement> | React.FocusEvent<HTMLInputElement>\n  ) => {\n    e.preventDefault();\n    const text = this.state.text.trim();\n    const { updateText, handleIsEditing, todoId, todoText } = this.props;\n    if (!!text && text !== todoText) {\n      await updateText({ todoId, text });\n    } else {\n      this.setState({ text: todoText });\n    }\n    handleIsEditing();\n  };\n\n  onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { value, name } = e.target;\n    this.setState({\n      [name]: value\n    });\n  };\n\n  render() {\n    return (\n      <Form onSubmit={this.onSubmit}>\n        <Input\n          type='text'\n          name='text'\n          value={this.state.text}\n          onChange={this.onChange}\n          onBlur={this.onSubmit}\n        />\n      </Form>\n    );\n  }\n}\n\nconst mapDispatchToProps = {\n  updateText\n};\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(TodoInput);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { FaTrashAlt } from 'react-icons/fa';\nimport {\n  Input,\n  Col,\n  Card,\n  CardBody,\n  CardTitle,\n  CardText,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Button\n} from 'reactstrap';\n\nimport { css } from '@emotion/core';\nimport { ClipLoader } from 'react-spinners';\n\nconst override: any = css`\n  display: block;\n  margin: 0 auto;\n`;\n\nimport TodoInput from './TodoInput';\nimport {\n  Todo as TodoInterface,\n  TodosFilters,\n  InitialTodoLoadingState\n} from '../../../../store/todos/types';\nimport { timeDifference } from '../../../../utils';\nimport {\n  toggleComplete,\n  ToggleTodoArgs,\n  deleteTodo,\n  DeleteTodoArgs\n} from '../../../../store/todos/actions';\nimport { AppState } from '../../../../store';\n\ninterface TodoProps {\n  complete: boolean;\n  _id: string;\n  loading: InitialTodoLoadingState;\n  toggleComplete: ({ todoId, userId, complete }: ToggleTodoArgs) => void;\n  deleteTodo: ({ todoId, userId }: DeleteTodoArgs) => void;\n  userId: string;\n  filter: TodosFilters;\n  text: string;\n  createdAt: string;\n  updatedAt: string;\n}\n\ninterface TodoState {\n  isEditing: boolean;\n  modal: boolean;\n}\n\nclass TodoComponent extends Component<TodoProps, TodoState> {\n  state = {\n    isEditing: false,\n    modal: false\n  };\n\n  handleToggleComplete = async () => {\n    const { complete, _id, userId, toggleComplete } = this.props;\n    await toggleComplete({\n      todoId: _id,\n      userId,\n      complete: !complete\n    });\n  };\n\n  handleIsEditing = () => {\n    this.setState(state => ({\n      isEditing: !state.isEditing\n    }));\n  };\n\n  toggleModal = () => {\n    this.setState(prevState => ({\n      modal: !prevState.modal\n    }));\n  };\n\n  onDelete = async () => {\n    const { deleteTodo, _id, userId } = this.props;\n    await deleteTodo({ todoId: _id, userId });\n  };\n\n  render() {\n    const { isEditing } = this.state;\n    const {\n      loading,\n      complete,\n      filter,\n      text,\n      _id,\n      createdAt,\n      updatedAt\n    } = this.props;\n    if (filter === 'Active' && complete && !loading.toggleComplete) {\n      return null;\n    } else if (filter === 'Completed' && !complete && !loading.toggleComplete) {\n      return null;\n    }\n    return (\n      <Col lg='4' md='6' sm='12'>\n        <Card className='mx-auto mt-4 w-75 p-3'>\n          <div className='d-flex justify-content-center'>\n            {!!loading.toggleComplete && (\n              <div className='position-absolute d-flex align-items-center'>\n                <ClipLoader\n                  css={override}\n                  sizeUnit={'px'}\n                  size={15}\n                  color={'#123abc'}\n                  loading={loading.toggleComplete}\n                />\n                <span className='ml-1'>Toggling Complete...</span>\n              </div>\n            )}\n            {!!loading.updateText && (\n              <div className='position-absolute d-flex align-items-center'>\n                <ClipLoader\n                  css={override}\n                  sizeUnit={'px'}\n                  size={15}\n                  color={'#123abc'}\n                  loading={loading.updateText}\n                />\n                <span className='ml-1'>Updating Text...</span>\n              </div>\n            )}\n          </div>\n          <Modal isOpen={this.state.modal} toggle={this.toggleModal}>\n            <ModalHeader toggle={this.toggleModal}>\n              Delete todo: {text}\n            </ModalHeader>\n            <ModalBody className='text-center'>\n              Please Confirm to proceed.\n            </ModalBody>\n            <ModalFooter>\n              <Button color='danger' onClick={this.onDelete}>\n                {loading.deleteTodo ? (\n                  <div>\n                    <ClipLoader\n                      css={override}\n                      sizeUnit={'px'}\n                      size={15}\n                      color={'#fff'}\n                      loading={loading.deleteTodo}\n                    />\n                    Deleting Todo...\n                  </div>\n                ) : (\n                  'Confirm'\n                )}\n              </Button>\n              <Button color='secondary' onClick={this.toggleModal}>\n                Cancel\n              </Button>\n            </ModalFooter>\n          </Modal>\n          <CardBody>\n            <CardTitle className='d-flex justify-content-between'>\n              <Input\n                onChange={this.handleToggleComplete}\n                checked={complete}\n                type='checkbox'\n              />\n              {isEditing ? (\n                <TodoInput\n                  todoId={_id}\n                  todoText={text}\n                  handleIsEditing={this.handleIsEditing}\n                />\n              ) : (\n                <div\n                  onDoubleClick={this.handleIsEditing}\n                  style={{\n                    textDecoration: complete ? 'line-through' : 'none',\n                    cursor: 'pointer'\n                  }}\n                  className='mx-auto'>\n                  {text}\n                </div>\n              )}\n              <FaTrashAlt\n                onClick={this.toggleModal}\n                style={{\n                  color: 'red',\n                  cursor: 'pointer'\n                }}\n              />\n            </CardTitle>\n            <CardText\n              className='mt-2 text-center'\n              style={{ borderTop: 'solid black 1px' }}>\n              {createdAt === updatedAt\n                ? `Added ${timeDifference(createdAt)}`\n                : `Updated ${timeDifference(updatedAt)}`}\n            </CardText>\n          </CardBody>\n        </Card>\n      </Col>\n    );\n  }\n}\n\nconst mapStateToProps = ({ user, todos }: AppState) => ({\n  userId: user._id,\n  page: todos.page,\n  filter: todos.filter\n});\n\nconst mapDispatchToProps = {\n  toggleComplete,\n  deleteTodo\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(TodoComponent);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { css } from '@emotion/core';\nimport { ClipLoader } from 'react-spinners';\nimport { Col } from 'reactstrap';\n\nimport Todo from './Todo';\nimport { fetchTodos, FetchTodosArgs } from '../../../../store/todos/actions';\nimport {\n  Entities,\n  TodosFilters,\n  Todo as TodoInterface,\n  InitialTodoLoadingState\n} from '../../../../store/todos/types';\nimport { AppState } from '../../../../store';\nconst override: any = css`\n  display: block;\n  margin: 0 auto;\n`;\n\ninterface PageTodosProps {\n  fetchTodos: ({ page, filter }: FetchTodosArgs) => void;\n  filter: TodosFilters;\n  ids: string[];\n  entities: Entities;\n  loading: boolean;\n}\n\nclass Todos extends Component<PageTodosProps> {\n  componentDidMount = () => {\n    this.props.fetchTodos({ page: 1, filter: this.props.filter });\n  };\n\n  render() {\n    const { ids, entities, loading } = this.props;\n    const todos = ids.map(id => entities[id]);\n    if (loading) {\n      return (\n        <Col sm='12'>\n          <div className='mt-5 mb-5 d-flex align-items-center justify-content-center'>\n            <ClipLoader\n              css={override}\n              sizeUnit={'px'}\n              size={50}\n              color={'#123abc'}\n              loading={loading}\n            />\n          </div>\n        </Col>\n      );\n    }\n    return todos.map(todo => <Todo key={todo._id} {...todo} />);\n  }\n}\n\nconst mapStateToProps = ({ todos }: AppState) => ({\n  entities: todos.entities,\n  ids: todos.ids,\n  filter: todos.filter,\n  loading: todos.loading.fetchTodos\n});\n\nconst mapDispatchToProps = {\n  fetchTodos\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Todos);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport { AppState } from '../../../store';\nimport { addTodo, AddTodoArgs } from '../../../store/todos/actions';\nimport { css } from '@emotion/core';\nimport { ClipLoader } from 'react-spinners';\n\nconst override: any = css`\n  display: block;\n  margin: 0 auto;\n`;\n\ninterface AddTodoProps {\n  addTodo: ({ text, userId }: AddTodoArgs) => void;\n  userId: string;\n  loading: boolean;\n}\ninterface AddTodoState {\n  [text: string]: string;\n}\nclass AddTodo extends Component<AddTodoProps, AddTodoState> {\n  state = {\n    text: ''\n  };\n\n  onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = e.target;\n    this.setState({\n      [name]: value\n    });\n  };\n\n  onSubmit = async (e: React.FormEvent<HTMLFormElement>): Promise<void> => {\n    e.preventDefault();\n    const text = this.state.text.trim();\n    if (text) {\n      await this.props.addTodo({ text, userId: this.props.userId });\n      this.setState({ text: '' });\n    }\n  };\n\n  render() {\n    return (\n      <form\n        className='\n          form-inline\n          justify-content-center\n          mx-auto\n          mt-4\n          mb-xs-1\n          mb-md-5\n          align-items-start\n        '\n        onSubmit={this.onSubmit}>\n        <input\n          type='text'\n          id='text'\n          name='text'\n          value={\n            this.props.loading\n              ? `Adding ${this.state.text}...`\n              : this.state.text\n          }\n          placeholder='Add Todo'\n          disabled={this.props.loading}\n          onChange={this.onChange}\n          className='form-control w-75'\n        />\n      </form>\n    );\n  }\n}\n\nconst mapStateToProps = ({ todos, user }: AppState) => ({\n  loading: todos.loading.addTodo,\n  userId: user._id\n});\n\nconst mapDispatchToProps = {\n  addTodo\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(AddTodo);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Input, Form, Button } from 'reactstrap';\n\nimport {\n  setSearchText,\n  fetchTodos,\n  FetchTodosArgs,\n  clearSearchText\n} from '../../../store/todos/actions';\nimport { TodosFilters } from '../../../store/todos/types';\nimport { AppState } from '../../../store';\n\ninterface SearchProps {\n  setSearchText: (text: string) => void;\n  fetchTodos: ({ page, filter, searchText }: FetchTodosArgs) => void;\n  filter: TodosFilters;\n  clearSearchText: () => void;\n  searchText: string;\n}\ninterface SearchState {\n  text: string;\n}\nclass Search extends Component<SearchProps, SearchState> {\n  state = {\n    text: ''\n  };\n\n  onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ text: e.target.value.trim() });\n  };\n\n  onSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    const { text } = this.state;\n    const { fetchTodos, filter, setSearchText } = this.props;\n    if (text) {\n      setSearchText(text);\n      await fetchTodos({ page: 1, filter, searchText: text });\n    }\n  };\n\n  onClearText = () => {\n    const { clearSearchText, fetchTodos, filter, searchText } = this.props;\n    if (searchText) {\n      this.setState({ text: '' }, () => {\n        clearSearchText();\n        fetchTodos({ page: 1, filter });\n      });\n    }\n  };\n\n  render() {\n    const { text } = this.state;\n    return (\n      <Form\n        className='\n          form-inline\n          justify-content-center\n          mx-auto\n          mt-4\n          mb-xs-1\n          mb-md-5\n          align-items-start\n        '\n        onSubmit={this.onSubmit}>\n        <Input\n          placeholder='Search todos'\n          value={text}\n          className='form-control w-75'\n          onChange={this.onChange}\n        />\n        <Button\n          onClick={this.onClearText}\n          style={{ color: 'red', fontSize: '18px' }}\n          className='border-0'\n          color='link'>\n          clear\n        </Button>\n      </Form>\n    );\n  }\n}\n\nconst mapStateToProps = ({ todos }: AppState) => ({\n  filter: todos.filter,\n  searchText: todos.searchText\n});\n\nconst mapDispatchToProps = {\n  fetchTodos,\n  setSearchText,\n  clearSearchText\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Search);\n","import React, { Component } from 'react';\nimport {\n  Input,\n  Button,\n  Col,\n  Row,\n  ButtonGroup,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter\n} from 'reactstrap';\nimport { connect } from 'react-redux';\nimport { withRouter, RouteComponentProps } from 'react-router';\nimport { css } from '@emotion/core';\nimport { ClipLoader } from 'react-spinners';\n\nimport { AppState } from '../../../store';\nimport {\n  Entities,\n  Todo,\n  TodosFilters,\n  TodosLoadingState\n} from '../../../store/todos/types';\nimport {\n  clearCompleted,\n  fetchTodos,\n  setFilter,\n  setPage,\n  FetchTodosArgs,\n  toggleAll\n} from '../../../store/todos/actions';\n\nconst override: any = css`\n  display: block;\n  margin: 0 auto;\n`;\n\ninterface FilterProps extends RouteComponentProps {\n  count: number;\n  entities: Entities;\n  ids: string[];\n  loading: TodosLoadingState;\n  clearCompleted: () => void;\n  filter: TodosFilters;\n  searchText: string;\n  fetchTodos: ({ page, filter }: FetchTodosArgs) => void;\n  setFilter: (filter: TodosFilters) => void;\n  setPage: (page: number) => void;\n  activePage: number;\n  completeAll: boolean;\n  toggleAll: (complete: boolean) => void;\n}\n\ninterface FilterState {\n  completeAll: boolean;\n  clearCompletedModal: boolean;\n}\n\nclass Filter extends Component<FilterProps, FilterState> {\n  state = {\n    completeAll: false,\n    clearCompletedModal: false\n  };\n\n  componentDidMount() {\n    const { ids, entities } = this.props;\n    const completeAll = ids\n      .map(id => entities[id])\n      .every(({ complete }) => complete);\n    this.setState({ completeAll });\n  }\n  componentDidUpdate = (prevProps: FilterProps) => {\n    const { completeAll } = this.props;\n    if (completeAll !== prevProps.completeAll) {\n      this.setState({ completeAll });\n    }\n  };\n  toggleModal = () => {\n    this.setState(prevState => ({\n      clearCompletedModal: !prevState.clearCompletedModal\n    }));\n  };\n  handleToggleAll = () => {\n    this.setState(\n      ({ completeAll }) => ({\n        completeAll: !completeAll\n      }),\n      async () => {\n        const { filter, toggleAll } = this.props;\n        await toggleAll(this.state.completeAll);\n        if (filter !== 'All' && this.props.count) {\n          await this.props.fetchTodos({\n            page: 1,\n            filter,\n            searchText: this.props.searchText\n          });\n        }\n      }\n    );\n  };\n  handleClearCompleted = async () => {\n    await this.props.clearCompleted();\n    this.toggleModal();\n  };\n\n  handleFilterClick = async (\n    e: React.MouseEvent<HTMLButtonElement, MouseEvent>\n  ) => {\n    const { name }: any = e.currentTarget;\n    const {\n      history,\n      fetchTodos,\n      setFilter,\n      setPage,\n      searchText,\n      match,\n      activePage\n    } = this.props;\n    history.push(`${match.url}?filter=${name}&?page=${activePage}`); // from withRouter\n    const query: any = { page: 1, filter: name };\n    if (searchText) {\n      query.searchText = searchText;\n    }\n    setFilter(name);\n    setPage(1);\n    await fetchTodos(query);\n  };\n\n  render() {\n    const { ids, entities, filter, loading, count } = this.props;\n    let todos = ids.map(id => entities[id]);\n    if (filter !== 'All') {\n      todos = todos.filter(todo =>\n        filter === 'Active' ? !todo.complete : todo.complete\n      );\n    }\n    const displayClearCompleted = todos.every(\n      ({ complete }: Todo) => !complete\n    );\n    return (\n      <Row className='my-3'>\n        <Col\n          lg='2'\n          className='d-flex justify-content-center align-items-center'>\n          Total: {count}\n        </Col>\n        <Col\n          lg='8'\n          className='filter d-flex justify-content-center align-items-center'>\n          <div className='d-flex align-items-center mr-4'>\n            <Input\n              onChange={this.handleToggleAll}\n              type='checkbox'\n              className='mt-0'\n              checked={this.state.completeAll}\n              disabled={!count}\n            />\n            {loading.toggleAll ? (\n              <div>\n                <ClipLoader\n                  css={override}\n                  sizeUnit={'px'}\n                  size={15}\n                  color={'#123abc'}\n                  loading={loading.toggleAll}\n                />\n                <span className='ml-1'>Toggling All... </span>\n              </div>\n            ) : (\n              'Toggle All'\n            )}\n          </div>\n          <div className='nav-container d-flex justify-content-around'>\n            <ButtonGroup>\n              <Button\n                disabled={filter === 'All'}\n                size='sm'\n                color='primary'\n                name='All'\n                onClick={this.handleFilterClick}>\n                All\n              </Button>\n              <Button\n                disabled={filter === 'Active'}\n                size='sm'\n                color='primary'\n                name='Active' // complete = false\n                onClick={this.handleFilterClick}>\n                Active\n              </Button>\n              <Button\n                disabled={filter === 'Completed'}\n                size='sm'\n                color='primary'\n                name='Completed'\n                onClick={this.handleFilterClick}>\n                Completed\n              </Button>\n            </ButtonGroup>\n          </div>\n        </Col>\n        <Col\n          lg='2'\n          className='d-flex align-items-center justify-content-center'>\n          <Modal\n            isOpen={this.state.clearCompletedModal}\n            toggle={this.toggleModal}>\n            <ModalHeader toggle={this.toggleModal}>\n              Delete Multiple todos\n            </ModalHeader>\n            <ModalBody>\n              <div>\n                You're about to delete the following. Please confirm to proceed.\n              </div>\n              <ul>\n                {ids\n                  .filter(id => entities[id].complete)\n                  .map(id => {\n                    return <li key={id}>{entities[id].text}</li>;\n                  })}\n              </ul>\n            </ModalBody>\n            <ModalFooter>\n              <Button color='danger' onClick={this.handleClearCompleted}>\n                {loading.clearCompleted ? (\n                  <div>\n                    <ClipLoader\n                      css={override}\n                      sizeUnit={'px'}\n                      size={15}\n                      color={'#fff'}\n                      loading={loading.clearCompleted}\n                    />\n                    Deleting Todo...\n                  </div>\n                ) : (\n                  'Confirm'\n                )}\n              </Button>\n              <Button color='secondary' onClick={this.toggleModal}>\n                Cancel\n              </Button>\n            </ModalFooter>\n          </Modal>\n          <Button\n            onClick={this.toggleModal}\n            disabled={displayClearCompleted}\n            size='sm'\n            color='danger'>\n            Clear Completed\n          </Button>\n        </Col>\n      </Row>\n    );\n  }\n}\n\nconst mapStateToProps = ({ todos }: AppState) => ({\n  count: todos.count,\n  ids: todos.ids,\n  entities: todos.entities,\n  filter: todos.filter,\n  searchText: todos.searchText,\n  activePage: todos.activePage,\n  completeAll: todos.ids\n    .map(id => todos.entities[id])\n    .every(({ complete }) => complete),\n  loading: todos.loading\n});\n\nconst mapDispatchToProps = {\n  clearCompleted,\n  fetchTodos,\n  setFilter,\n  setPage,\n  toggleAll\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withRouter(Filter));\n","import React, { Component } from 'react';\nimport Pagination from 'react-js-pagination';\nimport { connect } from 'react-redux';\nimport { Alert, Button } from 'reactstrap';\n\nimport { AppState } from '../../../store';\nimport { Entities, TodosFilters } from '../../../store/todos/types';\nimport {\n  FetchTodosArgs,\n  fetchTodos,\n  setPage\n} from '../../../store/todos/actions';\n\ninterface PaginatorProps {\n  fetchTodos: ({ page, filter }: FetchTodosArgs) => void;\n  setPage: (page: number) => void;\n  count: number;\n  filter: TodosFilters;\n  loading: boolean;\n  activePage: number;\n  countPerPage: number;\n  showRefresh: boolean;\n  searchText: string;\n  entities: Entities;\n  ids: string[];\n}\n\nclass Paginator extends Component<PaginatorProps> {\n  onPageChange = async (page: number) => {\n    const { fetchTodos, setPage, filter, searchText } = this.props;\n    const query: FetchTodosArgs = {\n      page,\n      filter\n    };\n    if (searchText) {\n      query.searchText = searchText;\n    }\n    await fetchTodos(query);\n    setPage(page);\n  };\n\n  onRefresh = () => {\n    const { fetchTodos, filter, activePage: page, searchText } = this.props;\n    fetchTodos({ page, filter, searchText });\n  };\n\n  render() {\n    const {\n      activePage,\n      count,\n      filter,\n      loading,\n      countPerPage,\n      showRefresh,\n      searchText,\n      ids,\n      entities\n    } = this.props;\n    const todos = ids.map(id => entities[id]);\n    let filterCount = todos.length;\n    if (searchText && filter !== 'All') {\n      // filterCount = filter(map(ids, id => entities[id]), t =>\n      //   sort === 'active' ? !t.complete : t.complete\n      // ).length;\n      filterCount = todos.filter(todo =>\n        filter === 'Active' ? !todo.complete : todo.complete\n      ).length;\n    }\n    return (\n      <React.Fragment>\n        {!count && !loading ? (\n          <Alert color='primary'>\n            You have no {filter === 'All' ? '' : filter} todos yet.\n          </Alert>\n        ) : (\n          <div className='d-flex flex-column mt-3'>\n            {showRefresh && (\n              <Button\n                color='primary'\n                className='btn-block'\n                onClick={this.onRefresh}>\n                Refresh Page\n              </Button>\n            )}\n            <Pagination\n              activePage={activePage}\n              itemsCountPerPage={countPerPage}\n              totalItemsCount={count}\n              pageRangeDisplayed={5}\n              onChange={this.onPageChange}\n            />\n          </div>\n        )}\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = ({ todos }: AppState) => ({\n  count: todos.count,\n  filter: todos.filter,\n  loading: todos.loading.fetchTodos,\n  activePage: todos.page,\n  countPerPage: todos.countPerPage,\n  showRefresh: todos.showRefresh,\n  searchText: todos.searchText,\n  entities: todos.entities,\n  ids: todos.ids\n});\n\nconst mapDispatchToProps = {\n  fetchTodos,\n  setPage\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Paginator);\n","import React from 'react';\nimport { Alert, Col, Container, Row } from 'reactstrap';\nimport { connect } from 'react-redux';\nimport { withRouter, RouteComponentProps } from 'react-router-dom';\n\nimport { Todos } from './Todos';\nimport AddTodo from './AddTodo';\nimport Search from './Search';\nimport Filter from './Filter';\nimport { AppState } from '../../../store';\nimport Paginator from './Paginator';\n\ninterface HomeProps extends RouteComponentProps {\n  confirmed: boolean;\n}\n\nclass Home extends React.Component<HomeProps> {\n  render() {\n    const { confirmed } = this.props;\n    return (\n      <React.Fragment>\n        <Container>\n          <Row>\n            <Col xs='12' md='6'>\n              {confirmed ? (\n                <AddTodo />\n              ) : (\n                <Alert\n                  className='text-center mx-auto mt-4 mb-xs-1 mb-md-5'\n                  color='primary'>\n                  Please confirm your account to Add Todo\n                </Alert>\n              )}\n            </Col>\n            <Col xs='12' md='6'>\n              <Search />\n            </Col>\n            <Col sm='12'>\n              <Filter />\n            </Col>\n            <Todos />\n          </Row>\n        </Container>\n        <Container>\n          <Row>\n            <Col>\n              <div className='d-flex justify-content-center'>\n                <Paginator />\n              </div>\n            </Col>\n          </Row>\n        </Container>\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = ({ user }: AppState) => ({\n  confirmed: user.confirmed\n});\n\nexport default connect(\n  mapStateToProps,\n  null\n)(withRouter(Home));\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport {\n  Route,\n  Redirect,\n  RouteComponentProps,\n  RouteProps\n} from 'react-router-dom';\nimport { AppState } from '../../store';\n\ninterface GuestRouteProps extends RouteProps {\n  isAuthenticated: boolean;\n  component: new (props: RouteComponentProps) => React.Component;\n}\n\nconst GuestRoute: React.SFC<GuestRouteProps> = ({\n  isAuthenticated,\n  component: Component,\n  ...rest\n}) => (\n  <Route\n    {...rest}\n    render={props =>\n      !!isAuthenticated ? <Redirect to='/' /> : <Component {...props} />\n    }\n  />\n);\n\nconst mapStateToProps = ({ user }: AppState) => ({\n  isAuthenticated: !!user._id && !!user.email\n});\n\nexport default connect(mapStateToProps)(GuestRoute);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport {\n  Route,\n  Redirect,\n  RouteProps,\n  RouteComponentProps\n} from 'react-router-dom';\nimport { AppState } from '../../store';\n\ninterface GuestRouteProps extends RouteProps {\n  isAuthenticated: boolean;\n  component: new (props: RouteComponentProps) => React.Component;\n}\n\nconst UserRoute: React.SFC<GuestRouteProps> = ({\n  isAuthenticated,\n  component: Component,\n  ...rest\n}) => (\n  <Route\n    {...rest}\n    render={props =>\n      !!isAuthenticated ? <Component {...props} /> : <Redirect to='/login' />\n    }\n  />\n);\n\nconst mapStateToProps = ({ user }: AppState) => ({\n  isAuthenticated: !!user._id && !!user.email\n});\n\nexport default connect(mapStateToProps)(UserRoute);\n","import React from 'react';\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  Nav,\n  NavItem,\n  NavLink,\n  Container\n} from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\nimport { withRouter, RouteComponentProps } from 'react-router';\nimport { AppState } from '../../store';\n\nimport { logOut } from '../../store/user/actions';\n\ninterface HeaderProps extends RouteComponentProps {\n  logOut: typeof logOut;\n  email: string;\n  _id: string;\n}\n\nclass Header extends React.Component<HeaderProps> {\n  state = {\n    isOpen: false\n  };\n\n  logOut = (e: React.MouseEvent) => {\n    e.preventDefault();\n    localStorage.removeItem('token');\n    delete axios.defaults.headers.common.authorization;\n    this.props.logOut();\n  };\n\n  toggle = () => {\n    const { isOpen } = this.state;\n    this.setState({\n      isOpen: !isOpen\n    });\n  };\n\n  render() {\n    const { _id, email } = this.props;\n    return (\n      <React.Fragment>\n        <Navbar color='light' light expand='md'>\n          <Container>\n            <Link to='/home' className='navbar-brand'>\n              Glendon Philipp Baculio\n            </Link>\n            <NavbarToggler onClick={this.toggle} />\n            <Collapse isOpen={this.state.isOpen} navbar>\n              <Nav className='ml-auto' navbar>\n                {email && _id ? (\n                  <React.Fragment>\n                    <NavItem>\n                      <NavLink disabled style={{ color: 'black' }}>\n                        <strong>{this.props.email}</strong>\n                      </NavLink>\n                    </NavItem>\n                    <NavItem>\n                      <button\n                        type='button'\n                        style={{\n                          backgroundColor: '#F8F9FA',\n                          border: 'none',\n                          cursor: 'pointer'\n                        }}\n                        className='nav-link'\n                        onClick={this.logOut}>\n                        Logout\n                      </button>\n                    </NavItem>\n                  </React.Fragment>\n                ) : (\n                  <React.Fragment>\n                    <NavItem>\n                      <Link className='nav-link' to='/login'>\n                        Login\n                      </Link>\n                    </NavItem>\n                    <NavItem>\n                      <Link className='nav-link' to='/signup'>\n                        Signup\n                      </Link>\n                    </NavItem>\n                  </React.Fragment>\n                )}\n              </Nav>\n            </Collapse>\n          </Container>\n        </Navbar>\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = ({ user }: AppState) => ({\n  email: user.email,\n  _id: user._id\n});\n\nexport default connect(\n  mapStateToProps,\n  { logOut }\n)(withRouter(Header));\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { css } from '@emotion/core';\nimport { ClipLoader } from 'react-spinners';\nimport { SignUp, LogIn, Home, ConfirmToken } from './components/pages';\nimport { GuestRoute, AuthenticatedRoute } from './components/routes';\nimport { Header } from './components/navigation';\nimport { fetchUser } from './store/user/actions';\nimport { setAuthorizationHeader } from './utils';\nimport { AppState } from './store';\n\nconst override: any = css`\n  display: block;\n  margin: 0 auto;\n`;\n\ninterface AppProps {\n  loading: boolean;\n  fetchUser: () => void;\n}\n\nclass App extends React.Component<AppProps> {\n  componentDidMount = async () => {\n    const token = localStorage.getItem('token');\n    await setAuthorizationHeader(token);\n    if (token && !`${window.location.href}`.includes('/confirmation')) {\n      await this.props.fetchUser();\n    }\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        {!!this.props.loading ? (\n          <div\n            style={{\n              left: 0,\n              top: 0,\n              right: 0,\n              bottom: 0,\n              backgroundColor: 'rgba(0, 0, 0, .1)'\n            }}\n            className='d-flex position-absolute align-items-center justify-content-center'>\n            <ClipLoader\n              css={override}\n              sizeUnit={'px'}\n              size={100}\n              color={'#123abc'}\n              loading={this.props.loading}\n            />\n          </div>\n        ) : (\n          <React.Fragment>\n            <Header />\n            <Switch>\n              <Route\n                exact\n                path='/confirmation/:token'\n                component={ConfirmToken}\n              />\n              <GuestRoute path='/signup' exact component={SignUp} />\n              <GuestRoute path='/login' exact component={LogIn} />\n              <AuthenticatedRoute\n                exact\n                path='/(home)?/:filter?'\n                component={Home}\n              />\n            </Switch>\n          </React.Fragment>\n        )}\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = ({ user }: AppState) => ({\n  loading: user.loading.fetchUser\n});\n\nconst mapDispatchToProps = {\n  fetchUser\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport configureStore from './store';\nimport { Route, BrowserRouter } from 'react-router-dom';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport './paginator.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nconst store = configureStore();\n\nconst Root = () => (\n  <Provider store={store}>\n    <BrowserRouter>\n      <Route path='/' component={App} />\n    </BrowserRouter>\n  </Provider>\n);\n\nReactDOM.render(<Root />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}